{"ast":null,"code":"var _jsxFileName = \"/Users/olivierwinkler/dev/blockchain/my-wave-portal/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const providerOptions = {\n    /* See Provider Options Section */\n  };\n  const web3Modal = new Web3Modal({\n    network: \"mainnet\",\n    // optional\n    cacheProvider: true,\n    // optional\n    providerOptions // required\n\n  });\n\n  const connectWallet = async () => {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts.length !== 0) {\n      console.log(accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const wave = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const wavePortalContract = new ethers.Contract(contractAddress, contractABI, signer);\n        let count = await wavePortalContract.getTotalWaves();\n        console.log(\"Retrieved total wave count...\", count.toNumber());\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"\\uD83D\\uDC4B Hey there!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bio\",\n        children: \"I am farza and I worked on self-driving cars so that's pretty cool right? Connect your Ethereum wallet and wave at me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"waveButton\",\n        onClick: () => {},\n        children: \"Wave at Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !currentAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"waveButton\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/olivierwinkler/dev/blockchain/my-wave-portal/frontend/src/App.tsx"],"names":["React","useEffect","useState","Web3","Web3Modal","App","currentAccount","setCurrentAccount","providerOptions","web3Modal","network","cacheProvider","connectWallet","provider","connect","web3","accounts","eth","getAccounts","length","console","log","wave","ethereum","window","ethers","providers","Web3Provider","signer","getSigner","wavePortalContract","Contract","contractAddress","contractABI","count","getTotalWaves","toNumber","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMM,eAAe,GAAG;AACtB;AADsB,GAAxB;AAIA,QAAMC,SAAS,GAAG,IAAIL,SAAJ,CAAc;AAC9BM,IAAAA,OAAO,EAAE,SADqB;AACV;AACpBC,IAAAA,aAAa,EAAE,IAFe;AAET;AACrBH,IAAAA,eAH8B,CAGb;;AAHa,GAAd,CAAlB;;AAMA,QAAMI,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMJ,SAAS,CAACK,OAAV,EAAvB;AACA,UAAMC,IAAI,GAAG,IAAIZ,IAAJ,CAASU,QAAT,CAAb;AAEA,UAAMG,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;;AAEA,QAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAAC,CAAD,CAApB;AACAT,MAAAA,iBAAiB,CAACS,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,KAHD,MAGO;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF,GAZD;;AAcA,QAAMC,IAAI,GAAG,YAAY;AACvB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAeC,MAArB;;AAEA,UAAID,QAAJ,EAAc;AACZ,cAAMV,QAAQ,GAAG,IAAIY,MAAM,CAACC,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,cAAMK,MAAM,GAAGf,QAAQ,CAACgB,SAAT,EAAf;AACA,cAAMC,kBAAkB,GAAG,IAAIL,MAAM,CAACM,QAAX,CACzBC,eADyB,EAEzBC,WAFyB,EAGzBL,MAHyB,CAA3B;AAMA,YAAIM,KAAK,GAAG,MAAMJ,kBAAkB,CAACK,aAAnB,EAAlB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6Ca,KAAK,CAACE,QAAN,EAA7C;AACD,OAXD,MAWO;AACLhB,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,KAjBD,CAiBE,OAAOgB,KAAP,EAAc;AACdjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACD;AACF,GArBD;;AAuBApC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,MAAM,CAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EAeG,CAACN,cAAD,iBACC;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAEM,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/ED;;GAAMP,G;;KAAAA,G;AAiFN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const providerOptions = {\n    /* See Provider Options Section */\n  };\n\n  const web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: true, // optional\n    providerOptions, // required\n  });\n\n  const connectWallet = async () => {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n\n    const accounts = await web3.eth.getAccounts();\n\n    if (accounts.length !== 0) {\n      console.log(accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const wave = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const wavePortalContract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n\n        let count = await wavePortalContract.getTotalWaves();\n        console.log(\"Retrieved total wave count...\", count.toNumber());\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    connectWallet();\n  }, []);\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"dataContainer\">\n        <div className=\"header\">ðŸ‘‹ Hey there!</div>\n\n        <div className=\"bio\">\n          I am farza and I worked on self-driving cars so that's pretty cool\n          right? Connect your Ethereum wallet and wave at me!\n        </div>\n\n        <button className=\"waveButton\" onClick={() => {}}>\n          Wave at Me\n        </button>\n\n        {/*\n         * If there is no currentAccount render this button\n         */}\n        {!currentAccount && (\n          <button className=\"waveButton\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}